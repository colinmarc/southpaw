#![allow(missing_docs)]

use crate::sys::*;
use num_enum::{IntoPrimitive, TryFromPrimitive};

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum BusType {
    Pci = 0x01,
    IsAPnp = 0x02,
    Usb = 0x03,
    Hil = 0x04,
    Bluetooth = 0x05,
    Virtual = 0x06,
    Isa = 0x10,
    I8042 = 0x11,
    Xtkbd = 0x12,
    RS232 = 0x13,
    Gameport = 0x14,
    Parport = 0x15,
    Amiga = 0x16,
    Adb = 0x17,
    I2C = 0x18,
    Host = 0x19,
    Gsc = 0x1a,
    Atari = 0x1b,
    Spi = 0x1c,
    Rmi = 0x1d,
    Cec = 0x1e,
    IntelIshtp = 0x1f,
    AmdSfh = 0x20,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum EventType {
    Key = EV_KEY,
    RelativeAxis = EV_REL,
    AbsoluteAxis = EV_ABS,
    Misc = EV_MSC,
    Switch = EV_SW,
    Led = EV_LED,
    Sound = EV_SND,
    Autorepeat = EV_REP,
    ForceFeedback = EV_FF,
    Power = EV_PWR,
    ForceFeedbackStatus = EV_FF_STATUS,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum InputProperty {
    Pointer = INPUT_PROP_POINTER,
    Direct = INPUT_PROP_DIRECT,
    ButtonPad = INPUT_PROP_BUTTONPAD,
    SemiMt = INPUT_PROP_SEMI_MT,
    TopButtonPad = INPUT_PROP_TOPBUTTONPAD,
    PointingStick = INPUT_PROP_POINTING_STICK,
    Accelerometer = INPUT_PROP_ACCELEROMETER,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash)]
pub enum Scancode {
    Key(KeyCode),
    RelativeAxis(RelAxis),
    AbsoluteAxis(AbsAxis),
    Switch(SwitchCode),
    Led(LedCode),
    Sound(SoundCode),
    AutoRepeat(RepeatCode),
    Misc(MiscCode),
}

impl Scancode {
    pub fn event_type(&self) -> EventType {
        match self {
            Scancode::Key(_) => EventType::Key,
            Scancode::RelativeAxis(_) => EventType::RelativeAxis,
            Scancode::AbsoluteAxis(_) => EventType::AbsoluteAxis,
            Scancode::Switch(_) => EventType::Switch,
            Scancode::Led(_) => EventType::Led,
            Scancode::Sound(_) => EventType::Sound,
            Scancode::AutoRepeat(_) => EventType::Autorepeat,
            Scancode::Misc(_) => EventType::Misc,
        }
    }
}

impl From<Scancode> for u16 {
    fn from(value: Scancode) -> Self {
        match value {
            Scancode::Key(c) => Self::from(c),
            Scancode::RelativeAxis(c) => Self::from(c),
            Scancode::AbsoluteAxis(c) => Self::from(c),
            Scancode::Switch(c) => Self::from(c),
            Scancode::Led(c) => Self::from(c),
            Scancode::Sound(c) => Self::from(c),
            Scancode::AutoRepeat(c) => Self::from(c),
            Scancode::Misc(c) => Self::from(c),
        }
    }
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum SynCode {
    Report = SYN_REPORT,
    Config = SYN_CONFIG,
    MtReport = SYN_MT_REPORT,
    Dropped = SYN_DROPPED,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum KeyCode {
    KeyEsc = KEY_ESC,
    Key1 = KEY_1,
    Key2 = KEY_2,
    Key3 = KEY_3,
    Key4 = KEY_4,
    Key5 = KEY_5,
    Key6 = KEY_6,
    Key7 = KEY_7,
    Key8 = KEY_8,
    Key9 = KEY_9,
    Key0 = KEY_0,
    KeyMinus = KEY_MINUS,
    KeyEqual = KEY_EQUAL,
    KeyBackspace = KEY_BACKSPACE,
    KeyTab = KEY_TAB,
    KeyQ = KEY_Q,
    KeyW = KEY_W,
    KeyE = KEY_E,
    KeyR = KEY_R,
    KeyT = KEY_T,
    KeyY = KEY_Y,
    KeyU = KEY_U,
    KeyI = KEY_I,
    KeyO = KEY_O,
    KeyP = KEY_P,
    KeyLeftbrace = KEY_LEFTBRACE,
    KeyRightbrace = KEY_RIGHTBRACE,
    KeyEnter = KEY_ENTER,
    KeyLeftctrl = KEY_LEFTCTRL,
    KeyA = KEY_A,
    KeyS = KEY_S,
    KeyD = KEY_D,
    KeyF = KEY_F,
    KeyG = KEY_G,
    KeyH = KEY_H,
    KeyJ = KEY_J,
    KeyK = KEY_K,
    KeyL = KEY_L,
    KeySemicolon = KEY_SEMICOLON,
    KeyApostrophe = KEY_APOSTROPHE,
    KeyGrave = KEY_GRAVE,
    KeyLeftshift = KEY_LEFTSHIFT,
    KeyBackslash = KEY_BACKSLASH,
    KeyZ = KEY_Z,
    KeyX = KEY_X,
    KeyC = KEY_C,
    KeyV = KEY_V,
    KeyB = KEY_B,
    KeyN = KEY_N,
    KeyM = KEY_M,
    KeyComma = KEY_COMMA,
    KeyDot = KEY_DOT,
    KeySlash = KEY_SLASH,
    KeyRightshift = KEY_RIGHTSHIFT,
    KeyKpasterisk = KEY_KPASTERISK,
    KeyLeftalt = KEY_LEFTALT,
    KeySpace = KEY_SPACE,
    KeyCapslock = KEY_CAPSLOCK,
    KeyF1 = KEY_F1,
    KeyF2 = KEY_F2,
    KeyF3 = KEY_F3,
    KeyF4 = KEY_F4,
    KeyF5 = KEY_F5,
    KeyF6 = KEY_F6,
    KeyF7 = KEY_F7,
    KeyF8 = KEY_F8,
    KeyF9 = KEY_F9,
    KeyF10 = KEY_F10,
    KeyNumlock = KEY_NUMLOCK,
    KeyScrolllock = KEY_SCROLLLOCK,
    KeyKp7 = KEY_KP7,
    KeyKp8 = KEY_KP8,
    KeyKp9 = KEY_KP9,
    KeyKpminus = KEY_KPMINUS,
    KeyKp4 = KEY_KP4,
    KeyKp5 = KEY_KP5,
    KeyKp6 = KEY_KP6,
    KeyKpplus = KEY_KPPLUS,
    KeyKp1 = KEY_KP1,
    KeyKp2 = KEY_KP2,
    KeyKp3 = KEY_KP3,
    KeyKp0 = KEY_KP0,
    KeyKpdot = KEY_KPDOT,
    KeyZenkakuhankaku = KEY_ZENKAKUHANKAKU,
    Key102nd = KEY_102ND,
    KeyF11 = KEY_F11,
    KeyF12 = KEY_F12,
    KeyRo = KEY_RO,
    KeyKatakana = KEY_KATAKANA,
    KeyHiragana = KEY_HIRAGANA,
    KeyHenkan = KEY_HENKAN,
    KeyKatakanahiragana = KEY_KATAKANAHIRAGANA,
    KeyMuhenkan = KEY_MUHENKAN,
    KeyKpjpcomma = KEY_KPJPCOMMA,
    KeyKpenter = KEY_KPENTER,
    KeyRightctrl = KEY_RIGHTCTRL,
    KeyKpslash = KEY_KPSLASH,
    KeySysrq = KEY_SYSRQ,
    KeyRightalt = KEY_RIGHTALT,
    KeyLinefeed = KEY_LINEFEED,
    KeyHome = KEY_HOME,
    KeyUp = KEY_UP,
    KeyPageup = KEY_PAGEUP,
    KeyLeft = KEY_LEFT,
    KeyRight = KEY_RIGHT,
    KeyEnd = KEY_END,
    KeyDown = KEY_DOWN,
    KeyPagedown = KEY_PAGEDOWN,
    KeyInsert = KEY_INSERT,
    KeyDelete = KEY_DELETE,
    KeyMacro = KEY_MACRO,
    KeyMute = KEY_MUTE,
    KeyVolumedown = KEY_VOLUMEDOWN,
    KeyVolumeup = KEY_VOLUMEUP,
    KeyPower = KEY_POWER,
    KeyKpequal = KEY_KPEQUAL,
    KeyKpplusminus = KEY_KPPLUSMINUS,
    KeyPause = KEY_PAUSE,
    KeyScale = KEY_SCALE,
    KeyKpcomma = KEY_KPCOMMA,
    KeyHangeul = KEY_HANGEUL, // Also KEY_HANGUEL
    KeyHanja = KEY_HANJA,
    KeyYen = KEY_YEN,
    KeyLeftmeta = KEY_LEFTMETA,
    KeyRightmeta = KEY_RIGHTMETA,
    KeyCompose = KEY_COMPOSE,
    KeyStop = KEY_STOP,
    KeyAgain = KEY_AGAIN,
    KeyProps = KEY_PROPS,
    KeyUndo = KEY_UNDO,
    KeyFront = KEY_FRONT,
    KeyCopy = KEY_COPY,
    KeyOpen = KEY_OPEN,
    KeyPaste = KEY_PASTE,
    KeyFind = KEY_FIND,
    KeyCut = KEY_CUT,
    KeyHelp = KEY_HELP,
    KeyMenu = KEY_MENU,
    KeyCalc = KEY_CALC,
    KeySetup = KEY_SETUP,
    KeySleep = KEY_SLEEP,
    KeyWakeup = KEY_WAKEUP,
    KeyFile = KEY_FILE,
    KeySendfile = KEY_SENDFILE, // Also KEY_DELETEFILE
    KeyXfer = KEY_XFER,
    KeyProg1 = KEY_PROG1,
    KeyProg2 = KEY_PROG2,
    KeyWww = KEY_WWW,
    KeyMsdos = KEY_MSDOS,
    KeyScreenlock = KEY_SCREENLOCK,        // Also KEY_COFFEE
    KeyRotateDisplay = KEY_ROTATE_DISPLAY, // Also KEY_DIRECTION
    KeyCyclewindows = KEY_CYCLEWINDOWS,
    KeyMail = KEY_MAIL,
    KeyBookmarks = KEY_BOOKMARKS,
    KeyComputer = KEY_COMPUTER,
    KeyBack = KEY_BACK,
    KeyForward = KEY_FORWARD,
    KeyClosecd = KEY_CLOSECD,
    KeyEjectcd = KEY_EJECTCD, // Also KEY_EJECTCLOSECD
    KeyNextsong = KEY_NEXTSONG,
    KeyPlaypause = KEY_PLAYPAUSE,
    KeyPrevioussong = KEY_PREVIOUSSONG,
    KeyStopcd = KEY_STOPCD,
    KeyRecord = KEY_RECORD,
    KeyRewind = KEY_REWIND,
    KeyPhone = KEY_PHONE,
    KeyIso = KEY_ISO,
    KeyConfig = KEY_CONFIG,
    KeyHomepage = KEY_HOMEPAGE,
    KeyRefresh = KEY_REFRESH,
    KeyExit = KEY_EXIT,
    KeyMove = KEY_MOVE,
    KeyEdit = KEY_EDIT,
    KeyScrollup = KEY_SCROLLUP,
    KeyScrolldown = KEY_SCROLLDOWN,
    KeyKpleftparen = KEY_KPLEFTPAREN,
    KeyKprightparen = KEY_KPRIGHTPAREN,
    KeyNew = KEY_NEW,
    KeyRedo = KEY_REDO,
    KeyF13 = KEY_F13,
    KeyF14 = KEY_F14,
    KeyF15 = KEY_F15,
    KeyF16 = KEY_F16,
    KeyF17 = KEY_F17,
    KeyF18 = KEY_F18,
    KeyF19 = KEY_F19,
    KeyF20 = KEY_F20,
    KeyF21 = KEY_F21,
    KeyF22 = KEY_F22,
    KeyF23 = KEY_F23,
    KeyF24 = KEY_F24,
    KeyPlaycd = KEY_PLAYCD,
    KeyPausecd = KEY_PAUSECD,
    KeyProg3 = KEY_PROG3,
    KeyProg4 = KEY_PROG4,
    KeyDashboard = KEY_DASHBOARD, // Also KEY_ALL_APPLICATIONS
    KeySuspend = KEY_SUSPEND,
    KeyClose = KEY_CLOSE,
    KeyPlay = KEY_PLAY,
    KeyFastforward = KEY_FASTFORWARD,
    KeyBassboost = KEY_BASSBOOST,
    KeyPrint = KEY_PRINT,
    KeyHp = KEY_HP,
    KeyCamera = KEY_CAMERA,
    KeySound = KEY_SOUND,
    KeyQuestion = KEY_QUESTION,
    KeyEmail = KEY_EMAIL,
    KeyChat = KEY_CHAT,
    KeySearch = KEY_SEARCH,
    KeyConnect = KEY_CONNECT,
    KeyFinance = KEY_FINANCE,
    KeySport = KEY_SPORT,
    KeyShop = KEY_SHOP,
    KeyAlterase = KEY_ALTERASE,
    KeyCancel = KEY_CANCEL,
    KeyBrightnessdown = KEY_BRIGHTNESSDOWN,
    KeyBrightnessup = KEY_BRIGHTNESSUP,
    KeyMedia = KEY_MEDIA,
    KeySwitchvideomode = KEY_SWITCHVIDEOMODE,
    KeyKbdillumtoggle = KEY_KBDILLUMTOGGLE,
    KeyKbdillumdown = KEY_KBDILLUMDOWN,
    KeyKbdillumup = KEY_KBDILLUMUP,
    KeySend = KEY_SEND,
    KeyReply = KEY_REPLY,
    KeyForwardmail = KEY_FORWARDMAIL,
    KeySave = KEY_SAVE,
    KeyDocuments = KEY_DOCUMENTS,
    KeyBattery = KEY_BATTERY,
    KeyBluetooth = KEY_BLUETOOTH,
    KeyWlan = KEY_WLAN,
    KeyUwb = KEY_UWB,
    KeyUnknown = KEY_UNKNOWN,
    KeyVideoNext = KEY_VIDEO_NEXT,
    KeyVideoPrev = KEY_VIDEO_PREV,
    KeyBrightnessCycle = KEY_BRIGHTNESS_CYCLE,
    KeyBrightnessAuto = KEY_BRIGHTNESS_AUTO, // Also KEY_BRIGHTNESS_ZERO
    KeyDisplayOff = KEY_DISPLAY_OFF,
    KeyWwan = KEY_WWAN, // Also KEY_WIMAX
    KeyRfkill = KEY_RFKILL,
    KeyMicmute = KEY_MICMUTE,
    Btn0 = BTN_0, // Also BTN_MISC
    Btn1 = BTN_1,
    Btn2 = BTN_2,
    Btn3 = BTN_3,
    Btn4 = BTN_4,
    Btn5 = BTN_5,
    Btn6 = BTN_6,
    Btn7 = BTN_7,
    Btn8 = BTN_8,
    Btn9 = BTN_9,
    BtnLeft = BTN_LEFT, // Also BTN_MOUSE
    BtnRight = BTN_RIGHT,
    BtnMiddle = BTN_MIDDLE,
    BtnSide = BTN_SIDE,
    BtnExtra = BTN_EXTRA,
    BtnForward = BTN_FORWARD,
    BtnBack = BTN_BACK,
    BtnTask = BTN_TASK,
    BtnTrigger = BTN_TRIGGER, // Also BTN_JOYSTICK
    BtnThumb = BTN_THUMB,
    BtnThumb2 = BTN_THUMB2,
    BtnTop = BTN_TOP,
    BtnTop2 = BTN_TOP2,
    BtnPinkie = BTN_PINKIE,
    BtnBase = BTN_BASE,
    BtnBase2 = BTN_BASE2,
    BtnBase3 = BTN_BASE3,
    BtnBase4 = BTN_BASE4,
    BtnBase5 = BTN_BASE5,
    BtnBase6 = BTN_BASE6,
    BtnDead = BTN_DEAD,
    BtnSouth = BTN_SOUTH, // Also BTN_A, BTN_GAMEPAD
    BtnEast = BTN_EAST,   // Also BTN_B
    BtnC = BTN_C,
    BtnNorth = BTN_NORTH, // Also BTN_X
    BtnWest = BTN_WEST,   // ALSO BTN_Y
    BtnZ = BTN_Z,
    BtnTl = BTN_TL,
    BtnTr = BTN_TR,
    BtnTl2 = BTN_TL2,
    BtnTr2 = BTN_TR2,
    BtnSelect = BTN_SELECT,
    BtnStart = BTN_START,
    BtnMode = BTN_MODE,
    BtnThumbl = BTN_THUMBL,
    BtnThumbr = BTN_THUMBR,
    BtnToolPen = BTN_TOOL_PEN, // Also BTN_DIGI
    BtnToolRubber = BTN_TOOL_RUBBER,
    BtnToolBrush = BTN_TOOL_BRUSH,
    BtnToolPencil = BTN_TOOL_PENCIL,
    BtnToolAirbrush = BTN_TOOL_AIRBRUSH,
    BtnToolFinger = BTN_TOOL_FINGER,
    BtnToolMouse = BTN_TOOL_MOUSE,
    BtnToolLens = BTN_TOOL_LENS,
    BtnToolQuinttap = BTN_TOOL_QUINTTAP,
    BtnStylus3 = BTN_STYLUS3,
    BtnTouch = BTN_TOUCH,
    BtnStylus = BTN_STYLUS,
    BtnStylus2 = BTN_STYLUS2,
    BtnToolDoubletap = BTN_TOOL_DOUBLETAP,
    BtnToolTripletap = BTN_TOOL_TRIPLETAP,
    BtnToolQuadtap = BTN_TOOL_QUADTAP,
    BtnWheel = BTN_WHEEL, // Also BTN_GEAR_DOWN
    BtnGearUp = BTN_GEAR_UP,
    KeyOk = KEY_OK,
    KeySelect = KEY_SELECT,
    KeyGoto = KEY_GOTO,
    KeyClear = KEY_CLEAR,
    KeyPower2 = KEY_POWER2,
    KeyOption = KEY_OPTION,
    KeyInfo = KEY_INFO,
    KeyTime = KEY_TIME,
    KeyVendor = KEY_VENDOR,
    KeyArchive = KEY_ARCHIVE,
    KeyProgram = KEY_PROGRAM,
    KeyChannel = KEY_CHANNEL,
    KeyFavorites = KEY_FAVORITES,
    KeyEpg = KEY_EPG,
    KeyPvr = KEY_PVR,
    KeyMhp = KEY_MHP,
    KeyLanguage = KEY_LANGUAGE,
    KeyTitle = KEY_TITLE, // Also KEY_SUBTITLE
    KeyAngle = KEY_ANGLE,
    KeyFullScreen = KEY_FULL_SCREEN, // Also KEY_ZOOM
    KeyMode = KEY_MODE,
    KeyKeyboard = KEY_KEYBOARD,
    KeyScreen = KEY_SCREEN, // Also KEY_ASPECT_RATIO
    KeyPc = KEY_PC,
    KeyTv = KEY_TV,
    KeyTv2 = KEY_TV2,
    KeyVcr = KEY_VCR,
    KeyVcr2 = KEY_VCR2,
    KeySat = KEY_SAT,
    KeySat2 = KEY_SAT2,
    KeyCd = KEY_CD,
    KeyTape = KEY_TAPE,
    KeyRadio = KEY_RADIO,
    KeyTuner = KEY_TUNER,
    KeyPlayer = KEY_PLAYER,
    KeyText = KEY_TEXT,
    KeyDvd = KEY_DVD,
    KeyAux = KEY_AUX,
    KeyMp3 = KEY_MP3,
    KeyAudio = KEY_AUDIO,
    KeyVideo = KEY_VIDEO,
    KeyDirectory = KEY_DIRECTORY,
    KeyList = KEY_LIST,
    KeyMemo = KEY_MEMO,
    KeyCalendar = KEY_CALENDAR,
    KeyRed = KEY_RED,
    KeyGreen = KEY_GREEN,
    KeyYellow = KEY_YELLOW,
    KeyBlue = KEY_BLUE,
    KeyChannelup = KEY_CHANNELUP,
    KeyChanneldown = KEY_CHANNELDOWN,
    KeyFirst = KEY_FIRST,
    KeyLast = KEY_LAST,
    KeyAb = KEY_AB,
    KeyNext = KEY_NEXT,
    KeyRestart = KEY_RESTART,
    KeySlow = KEY_SLOW,
    KeyShuffle = KEY_SHUFFLE,
    KeyBreak = KEY_BREAK,
    KeyPrevious = KEY_PREVIOUS,
    KeyDigits = KEY_DIGITS,
    KeyTeen = KEY_TEEN,
    KeyTwen = KEY_TWEN,
    KeyVideophone = KEY_VIDEOPHONE,
    KeyGames = KEY_GAMES,
    KeyZoomin = KEY_ZOOMIN,
    KeyZoomout = KEY_ZOOMOUT,
    KeyZoomreset = KEY_ZOOMRESET,
    KeyWordprocessor = KEY_WORDPROCESSOR,
    KeyEditor = KEY_EDITOR,
    KeySpreadsheet = KEY_SPREADSHEET,
    KeyGraphicseditor = KEY_GRAPHICSEDITOR,
    KeyPresentation = KEY_PRESENTATION,
    KeyDatabase = KEY_DATABASE,
    KeyNews = KEY_NEWS,
    KeyVoicemail = KEY_VOICEMAIL,
    KeyAddressbook = KEY_ADDRESSBOOK,
    KeyMessenger = KEY_MESSENGER,
    KeyBrightnessToggle = KEY_BRIGHTNESS_TOGGLE, // Also KEY_DISPLAYTOGGLE
    KeySpellcheck = KEY_SPELLCHECK,
    KeyLogoff = KEY_LOGOFF,
    KeyDollar = KEY_DOLLAR,
    KeyEuro = KEY_EURO,
    KeyFrameback = KEY_FRAMEBACK,
    KeyFrameforward = KEY_FRAMEFORWARD,
    KeyContextMenu = KEY_CONTEXT_MENU,
    KeyMediaRepeat = KEY_MEDIA_REPEAT,
    Key10channelsup = KEY_10CHANNELSUP,
    Key10channelsdown = KEY_10CHANNELSDOWN,
    KeyImages = KEY_IMAGES,
    #[cfg(linux510)]
    KeyNotificationCenter = KEY_NOTIFICATION_CENTER,
    #[cfg(linux510)]
    KeyPickupPhone = KEY_PICKUP_PHONE,
    #[cfg(linux510)]
    KeyHangupPhone = KEY_HANGUP_PHONE,
    KeyDelEol = KEY_DEL_EOL,
    KeyDelEos = KEY_DEL_EOS,
    KeyInsLine = KEY_INS_LINE,
    KeyDelLine = KEY_DEL_LINE,
    KeyFn = KEY_FN,
    KeyFnEsc = KEY_FN_ESC,
    KeyFnF1 = KEY_FN_F1,
    KeyFnF2 = KEY_FN_F2,
    KeyFnF3 = KEY_FN_F3,
    KeyFnF4 = KEY_FN_F4,
    KeyFnF5 = KEY_FN_F5,
    KeyFnF6 = KEY_FN_F6,
    KeyFnF7 = KEY_FN_F7,
    KeyFnF8 = KEY_FN_F8,
    KeyFnF9 = KEY_FN_F9,
    KeyFnF10 = KEY_FN_F10,
    KeyFnF11 = KEY_FN_F11,
    KeyFnF12 = KEY_FN_F12,
    KeyFn1 = KEY_FN_1,
    KeyFn2 = KEY_FN_2,
    KeyFnD = KEY_FN_D,
    KeyFnE = KEY_FN_E,
    KeyFnF = KEY_FN_F,
    KeyFnS = KEY_FN_S,
    KeyFnB = KEY_FN_B,
    #[cfg(linux510)]
    KeyFnRightShift = KEY_FN_RIGHT_SHIFT,
    KeyBrlDot1 = KEY_BRL_DOT1,
    KeyBrlDot2 = KEY_BRL_DOT2,
    KeyBrlDot3 = KEY_BRL_DOT3,
    KeyBrlDot4 = KEY_BRL_DOT4,
    KeyBrlDot5 = KEY_BRL_DOT5,
    KeyBrlDot6 = KEY_BRL_DOT6,
    KeyBrlDot7 = KEY_BRL_DOT7,
    KeyBrlDot8 = KEY_BRL_DOT8,
    KeyBrlDot9 = KEY_BRL_DOT9,
    KeyBrlDot10 = KEY_BRL_DOT10,
    KeyNumeric0 = KEY_NUMERIC_0,
    KeyNumeric1 = KEY_NUMERIC_1,
    KeyNumeric2 = KEY_NUMERIC_2,
    KeyNumeric3 = KEY_NUMERIC_3,
    KeyNumeric4 = KEY_NUMERIC_4,
    KeyNumeric5 = KEY_NUMERIC_5,
    KeyNumeric6 = KEY_NUMERIC_6,
    KeyNumeric7 = KEY_NUMERIC_7,
    KeyNumeric8 = KEY_NUMERIC_8,
    KeyNumeric9 = KEY_NUMERIC_9,
    KeyNumericStar = KEY_NUMERIC_STAR,
    KeyNumericPound = KEY_NUMERIC_POUND,
    KeyNumericA = KEY_NUMERIC_A,
    KeyNumericB = KEY_NUMERIC_B,
    KeyNumericC = KEY_NUMERIC_C,
    KeyNumericD = KEY_NUMERIC_D,
    KeyCameraFocus = KEY_CAMERA_FOCUS,
    KeyWpsButton = KEY_WPS_BUTTON,
    KeyTouchpadToggle = KEY_TOUCHPAD_TOGGLE,
    KeyTouchpadOn = KEY_TOUCHPAD_ON,
    KeyTouchpadOff = KEY_TOUCHPAD_OFF,
    KeyCameraZoomin = KEY_CAMERA_ZOOMIN,
    KeyCameraZoomout = KEY_CAMERA_ZOOMOUT,
    KeyCameraUp = KEY_CAMERA_UP,
    KeyCameraDown = KEY_CAMERA_DOWN,
    KeyCameraLeft = KEY_CAMERA_LEFT,
    KeyCameraRight = KEY_CAMERA_RIGHT,
    KeyAttendantOn = KEY_ATTENDANT_ON,
    KeyAttendantOff = KEY_ATTENDANT_OFF,
    KeyAttendantToggle = KEY_ATTENDANT_TOGGLE,
    KeyLightsToggle = KEY_LIGHTS_TOGGLE,
    BtnDpadUp = BTN_DPAD_UP,
    BtnDpadDown = BTN_DPAD_DOWN,
    BtnDpadLeft = BTN_DPAD_LEFT,
    BtnDpadRight = BTN_DPAD_RIGHT,
    KeyAlsToggle = KEY_ALS_TOGGLE,
    KeyRotateLockToggle = KEY_ROTATE_LOCK_TOGGLE,
    KeyButtonconfig = KEY_BUTTONCONFIG,
    KeyTaskmanager = KEY_TASKMANAGER,
    KeyJournal = KEY_JOURNAL,
    KeyControlpanel = KEY_CONTROLPANEL,
    KeyAppselect = KEY_APPSELECT,
    KeyScreensaver = KEY_SCREENSAVER,
    KeyVoicecommand = KEY_VOICECOMMAND,
    KeyAssistant = KEY_ASSISTANT,
    KeyKbdLayoutNext = KEY_KBD_LAYOUT_NEXT,
    #[cfg(linux515)]
    KeyEmojiPicker = KEY_EMOJI_PICKER,
    #[cfg(linux61)]
    KeyDictate = KEY_DICTATE,
    #[cfg(linux66)]
    KeyCameraAccessEnable = KEY_CAMERA_ACCESS_ENABLE,
    #[cfg(linux66)]
    KeyCameraAccessDisable = KEY_CAMERA_ACCESS_DISABLE,
    #[cfg(linux66)]
    KeyCameraAccessToggle = KEY_CAMERA_ACCESS_TOGGLE,
    KeyBrightnessMin = KEY_BRIGHTNESS_MIN,
    KeyBrightnessMax = KEY_BRIGHTNESS_MAX,
    KeyKbdinputassistPrev = KEY_KBDINPUTASSIST_PREV,
    KeyKbdinputassistNext = KEY_KBDINPUTASSIST_NEXT,
    KeyKbdinputassistPrevgroup = KEY_KBDINPUTASSIST_PREVGROUP,
    KeyKbdinputassistNextgroup = KEY_KBDINPUTASSIST_NEXTGROUP,
    KeyKbdinputassistAccept = KEY_KBDINPUTASSIST_ACCEPT,
    KeyKbdinputassistCancel = KEY_KBDINPUTASSIST_CANCEL,
    KeyRightUp = KEY_RIGHT_UP,
    KeyRightDown = KEY_RIGHT_DOWN,
    KeyLeftUp = KEY_LEFT_UP,
    KeyLeftDown = KEY_LEFT_DOWN,
    KeyRootMenu = KEY_ROOT_MENU,
    KeyMediaTopMenu = KEY_MEDIA_TOP_MENU,
    KeyNumeric11 = KEY_NUMERIC_11,
    KeyNumeric12 = KEY_NUMERIC_12,
    KeyAudioDesc = KEY_AUDIO_DESC,
    Key3dMode = KEY_3D_MODE,
    KeyNextFavorite = KEY_NEXT_FAVORITE,
    KeyStopRecord = KEY_STOP_RECORD,
    KeyPauseRecord = KEY_PAUSE_RECORD,
    KeyVod = KEY_VOD,
    KeyUnmute = KEY_UNMUTE,
    KeyFastreverse = KEY_FASTREVERSE,
    KeySlowreverse = KEY_SLOWREVERSE,
    KeyData = KEY_DATA,
    KeyOnscreenKeyboard = KEY_ONSCREEN_KEYBOARD,
    #[cfg(linux510)]
    KeyPrivacyScreenToggle = KEY_PRIVACY_SCREEN_TOGGLE,
    #[cfg(linux510)]
    KeySelectiveScreenshot = KEY_SELECTIVE_SCREENSHOT,
    #[cfg(linux61)]
    KeyNextElement = KEY_NEXT_ELEMENT,
    #[cfg(linux61)]
    KeyPreviousElement = KEY_PREVIOUS_ELEMENT,
    #[cfg(linux61)]
    KeyAutopilotEngageToggle = KEY_AUTOPILOT_ENGAGE_TOGGLE,
    #[cfg(linux61)]
    KeyMarkWaypoint = KEY_MARK_WAYPOINT,
    #[cfg(linux61)]
    KeySos = KEY_SOS,
    #[cfg(linux61)]
    KeyNavChart = KEY_NAV_CHART,
    #[cfg(linux61)]
    KeyFishingChart = KEY_FISHING_CHART,
    #[cfg(linux61)]
    KeySingleRangeRadar = KEY_SINGLE_RANGE_RADAR,
    #[cfg(linux61)]
    KeyDualRangeRadar = KEY_DUAL_RANGE_RADAR,
    #[cfg(linux61)]
    KeyRadarOverlay = KEY_RADAR_OVERLAY,
    #[cfg(linux61)]
    KeyTraditionalSonar = KEY_TRADITIONAL_SONAR,
    #[cfg(linux61)]
    KeyClearvuSonar = KEY_CLEARVU_SONAR,
    #[cfg(linux61)]
    KeySidevuSonar = KEY_SIDEVU_SONAR,
    #[cfg(linux61)]
    KeyNavInfo = KEY_NAV_INFO,
    #[cfg(linux61)]
    KeyBrightnessMenu = KEY_BRIGHTNESS_MENU,
    #[cfg(linux510)]
    KeyMacro1 = KEY_MACRO1,
    #[cfg(linux510)]
    KeyMacro2 = KEY_MACRO2,
    #[cfg(linux510)]
    KeyMacro3 = KEY_MACRO3,
    #[cfg(linux510)]
    KeyMacro4 = KEY_MACRO4,
    #[cfg(linux510)]
    KeyMacro5 = KEY_MACRO5,
    #[cfg(linux510)]
    KeyMacro6 = KEY_MACRO6,
    #[cfg(linux510)]
    KeyMacro7 = KEY_MACRO7,
    #[cfg(linux510)]
    KeyMacro8 = KEY_MACRO8,
    #[cfg(linux510)]
    KeyMacro9 = KEY_MACRO9,
    #[cfg(linux510)]
    KeyMacro10 = KEY_MACRO10,
    #[cfg(linux510)]
    KeyMacro11 = KEY_MACRO11,
    #[cfg(linux510)]
    KeyMacro12 = KEY_MACRO12,
    #[cfg(linux510)]
    KeyMacro13 = KEY_MACRO13,
    #[cfg(linux510)]
    KeyMacro14 = KEY_MACRO14,
    #[cfg(linux510)]
    KeyMacro15 = KEY_MACRO15,
    #[cfg(linux510)]
    KeyMacro16 = KEY_MACRO16,
    #[cfg(linux510)]
    KeyMacro17 = KEY_MACRO17,
    #[cfg(linux510)]
    KeyMacro18 = KEY_MACRO18,
    #[cfg(linux510)]
    KeyMacro19 = KEY_MACRO19,
    #[cfg(linux510)]
    KeyMacro20 = KEY_MACRO20,
    #[cfg(linux510)]
    KeyMacro21 = KEY_MACRO21,
    #[cfg(linux510)]
    KeyMacro22 = KEY_MACRO22,
    #[cfg(linux510)]
    KeyMacro23 = KEY_MACRO23,
    #[cfg(linux510)]
    KeyMacro24 = KEY_MACRO24,
    #[cfg(linux510)]
    KeyMacro25 = KEY_MACRO25,
    #[cfg(linux510)]
    KeyMacro26 = KEY_MACRO26,
    #[cfg(linux510)]
    KeyMacro27 = KEY_MACRO27,
    #[cfg(linux510)]
    KeyMacro28 = KEY_MACRO28,
    #[cfg(linux510)]
    KeyMacro29 = KEY_MACRO29,
    #[cfg(linux510)]
    KeyMacro30 = KEY_MACRO30,
    #[cfg(linux510)]
    KeyMacroRecordStart = KEY_MACRO_RECORD_START,
    #[cfg(linux510)]
    KeyMacroRecordStop = KEY_MACRO_RECORD_STOP,
    #[cfg(linux510)]
    KeyMacroPresetCycle = KEY_MACRO_PRESET_CYCLE,
    #[cfg(linux510)]
    KeyMacroPreset1 = KEY_MACRO_PRESET1,
    #[cfg(linux510)]
    KeyMacroPreset2 = KEY_MACRO_PRESET2,
    #[cfg(linux510)]
    KeyMacroPreset3 = KEY_MACRO_PRESET3,
    #[cfg(linux510)]
    KeyKbdLcdMenu1 = KEY_KBD_LCD_MENU1,
    #[cfg(linux510)]
    KeyKbdLcdMenu2 = KEY_KBD_LCD_MENU2,
    #[cfg(linux510)]
    KeyKbdLcdMenu3 = KEY_KBD_LCD_MENU3,
    #[cfg(linux510)]
    KeyKbdLcdMenu4 = KEY_KBD_LCD_MENU4,
    #[cfg(linux510)]
    KeyKbdLcdMenu5 = KEY_KBD_LCD_MENU5,
    BtnTriggerHappy1 = BTN_TRIGGER_HAPPY1, // Also BTN_TRIGGER_HAPPY
    BtnTriggerHappy2 = BTN_TRIGGER_HAPPY2,
    BtnTriggerHappy3 = BTN_TRIGGER_HAPPY3,
    BtnTriggerHappy4 = BTN_TRIGGER_HAPPY4,
    BtnTriggerHappy5 = BTN_TRIGGER_HAPPY5,
    BtnTriggerHappy6 = BTN_TRIGGER_HAPPY6,
    BtnTriggerHappy7 = BTN_TRIGGER_HAPPY7,
    BtnTriggerHappy8 = BTN_TRIGGER_HAPPY8,
    BtnTriggerHappy9 = BTN_TRIGGER_HAPPY9,
    BtnTriggerHappy10 = BTN_TRIGGER_HAPPY10,
    BtnTriggerHappy11 = BTN_TRIGGER_HAPPY11,
    BtnTriggerHappy12 = BTN_TRIGGER_HAPPY12,
    BtnTriggerHappy13 = BTN_TRIGGER_HAPPY13,
    BtnTriggerHappy14 = BTN_TRIGGER_HAPPY14,
    BtnTriggerHappy15 = BTN_TRIGGER_HAPPY15,
    BtnTriggerHappy16 = BTN_TRIGGER_HAPPY16,
    BtnTriggerHappy17 = BTN_TRIGGER_HAPPY17,
    BtnTriggerHappy18 = BTN_TRIGGER_HAPPY18,
    BtnTriggerHappy19 = BTN_TRIGGER_HAPPY19,
    BtnTriggerHappy20 = BTN_TRIGGER_HAPPY20,
    BtnTriggerHappy21 = BTN_TRIGGER_HAPPY21,
    BtnTriggerHappy22 = BTN_TRIGGER_HAPPY22,
    BtnTriggerHappy23 = BTN_TRIGGER_HAPPY23,
    BtnTriggerHappy24 = BTN_TRIGGER_HAPPY24,
    BtnTriggerHappy25 = BTN_TRIGGER_HAPPY25,
    BtnTriggerHappy26 = BTN_TRIGGER_HAPPY26,
    BtnTriggerHappy27 = BTN_TRIGGER_HAPPY27,
    BtnTriggerHappy28 = BTN_TRIGGER_HAPPY28,
    BtnTriggerHappy29 = BTN_TRIGGER_HAPPY29,
    BtnTriggerHappy30 = BTN_TRIGGER_HAPPY30,
    BtnTriggerHappy31 = BTN_TRIGGER_HAPPY31,
    BtnTriggerHappy32 = BTN_TRIGGER_HAPPY32,
    BtnTriggerHappy33 = BTN_TRIGGER_HAPPY33,
    BtnTriggerHappy34 = BTN_TRIGGER_HAPPY34,
    BtnTriggerHappy35 = BTN_TRIGGER_HAPPY35,
    BtnTriggerHappy36 = BTN_TRIGGER_HAPPY36,
    BtnTriggerHappy37 = BTN_TRIGGER_HAPPY37,
    BtnTriggerHappy38 = BTN_TRIGGER_HAPPY38,
    BtnTriggerHappy39 = BTN_TRIGGER_HAPPY39,
    BtnTriggerHappy40 = BTN_TRIGGER_HAPPY40,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum RelAxis {
    X = REL_X,
    Y = REL_Y,
    Z = REL_Z,
    RX = REL_RX,
    RY = REL_RY,
    RZ = REL_RZ,
    Hwheel = REL_HWHEEL,
    Dial = REL_DIAL,
    Wheel = REL_WHEEL,
    Misc = REL_MISC,
    WheelHiRes = REL_WHEEL_HI_RES,
    HwheelHiRes = REL_HWHEEL_HI_RES,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum AbsAxis {
    X = ABS_X,
    Y = ABS_Y,
    Z = ABS_Z,
    RX = ABS_RX,
    RY = ABS_RY,
    RZ = ABS_RZ,
    Throttle = ABS_THROTTLE,
    Rudder = ABS_RUDDER,
    Wheel = ABS_WHEEL,
    Gas = ABS_GAS,
    Brake = ABS_BRAKE,
    HAT0X = ABS_HAT0X,
    HAT0Y = ABS_HAT0Y,
    HAT1X = ABS_HAT1X,
    HAT1Y = ABS_HAT1Y,
    HAT2X = ABS_HAT2X,
    HAT2Y = ABS_HAT2Y,
    HAT3X = ABS_HAT3X,
    HAT3Y = ABS_HAT3Y,
    Pressure = ABS_PRESSURE,
    Distance = ABS_DISTANCE,
    TiltX = ABS_TILT_X,
    TiltY = ABS_TILT_Y,
    ToolWidth = ABS_TOOL_WIDTH,
    Volume = ABS_VOLUME,
    #[cfg(linux61)]
    Profile = ABS_PROFILE,
    Misc = ABS_MISC,
    MtSlot = ABS_MT_SLOT,
    MtTouchMajor = ABS_MT_TOUCH_MAJOR,
    MtTouchMinor = ABS_MT_TOUCH_MINOR,
    MtWidthMajor = ABS_MT_WIDTH_MAJOR,
    MtWidthMinor = ABS_MT_WIDTH_MINOR,
    MtOrientation = ABS_MT_ORIENTATION,
    MtPositionX = ABS_MT_POSITION_X,
    MtPositionY = ABS_MT_POSITION_Y,
    MtToolType = ABS_MT_TOOL_TYPE,
    MtBlobId = ABS_MT_BLOB_ID,
    MtTrackingId = ABS_MT_TRACKING_ID,
    MtPressure = ABS_MT_PRESSURE,
    MtDistance = ABS_MT_DISTANCE,
    MtToolX = ABS_MT_TOOL_X,
    MtToolY = ABS_MT_TOOL_Y,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum SwitchCode {
    Lid = SW_LID,
    TabletMode = SW_TABLET_MODE,
    HeadphoneInsert = SW_HEADPHONE_INSERT,
    Radio = SW_RADIO, // Also SW_RFKILL_ALL
    MicrophoneInsert = SW_MICROPHONE_INSERT,
    Dock = SW_DOCK,
    LineoutInsert = SW_LINEOUT_INSERT,
    JackPhysicalInsert = SW_JACK_PHYSICAL_INSERT,
    VideooutInsert = SW_VIDEOOUT_INSERT,
    CameraLensCover = SW_CAMERA_LENS_COVER,
    KeypadSlide = SW_KEYPAD_SLIDE,
    FrontProximity = SW_FRONT_PROXIMITY,
    RotateLock = SW_ROTATE_LOCK,
    LineinInsert = SW_LINEIN_INSERT,
    MuteDevice = SW_MUTE_DEVICE,
    PenInserted = SW_PEN_INSERTED,
    #[cfg(linux510)]
    MachineCover = SW_MACHINE_COVER,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum MiscCode {
    Serial = MSC_SERIAL,
    Pulseled = MSC_PULSELED,
    Gesture = MSC_GESTURE,
    Raw = MSC_RAW,
    Scan = MSC_SCAN,
    Timestamp = MSC_TIMESTAMP,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum LedCode {
    Numl = LED_NUML,
    Capsl = LED_CAPSL,
    Scrolll = LED_SCROLLL,
    Compose = LED_COMPOSE,
    Kana = LED_KANA,
    Sleep = LED_SLEEP,
    Suspend = LED_SUSPEND,
    Mute = LED_MUTE,
    Misc = LED_MISC,
    Mail = LED_MAIL,
    Charging = LED_CHARGING,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum RepeatCode {
    Delay = REP_DELAY,
    Period = REP_PERIOD,
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash, IntoPrimitive, TryFromPrimitive)]
#[repr(u16)]
pub enum SoundCode {
    Click = SND_CLICK,
    Bell = SND_BELL,
    Tone = SND_TONE,
}
